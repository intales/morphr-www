---
// Importiamo i nostri file markdown
const [codeWithoutMorphr] = await Astro.glob('../content/code_without_morphr.md');
const [codeWithMorphr] = await Astro.glob('../content/code_with_morphr.md');
---

<div class="code-comparison my-8">
  <div class="flex flex-row">
    <div class="code-tab active" data-target="without-morphr">Flutter</div>
    <div class="code-tab" data-target="with-morphr">Flutter + Morphr</div>
  </div>
  
  <div class="bg-[#0d1117] rounded-b-xl border border-gray-800 dark-code">
    <div id="without-morphr" class="code-panel">
      <div class="p-4 overflow-hidden">
        <Fragment set:html={codeWithoutMorphr.compiledContent()} />
      </div>
    </div>
    
    <div id="with-morphr" class="code-panel" style="display: none;">
      <div class="p-4 overflow-hidden">
        <Fragment set:html={codeWithMorphr.compiledContent()} />
      </div>
    </div>
  </div>
</div>

<style is:global>
  /* Stile dei tab - ora sempre in riga */
  .code-comparison .code-tab {
    padding: 8px 16px;
    cursor: pointer;
    background-color: rgba(13, 17, 23, 0.7);
    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;
    margin-right: 2px;
    font-size: 0.875rem;
    color: #8b949e;
    transition: all 0.2s ease;
    white-space: nowrap; /* Impedisce il wrapping su schermi piccoli */
    min-width: 120px; /* Garantisce che il tab abbia una dimensione minima */
    text-align: center; /* Centra il testo nel tab */
  }
  
  .code-comparison .code-tab.active {
    background-color: #0d1117;
    color: white;
    border-top: 2px solid #E879F9;
  }
  
  /* Stile del codice */
  .dark-code pre {
    padding: 0 !important;
    margin: 0 !important;
    background-color: transparent !important;
    overflow-x: auto;
  }
  
  .dark-code code {
    font-family: "JetBrains Mono", "Fira Code", monospace;
    background-color: transparent !important;
    padding: 0 !important;
    font-size: 14px;
    line-height: 1.5;
    tab-size: 2;
  }
  
  /* Miglioramento colori sintassi */
  .dark-code .token.keyword {
    color: #ff7b72;
  }
  
  .dark-code .token.string {
    color: #a5d6ff;
  }
  
  .dark-code .token.function {
    color: #d2a8ff;
  }
  
  .dark-code .token.comment {
    color: #8b949e;
  }
  
  .dark-code .token.class-name {
    color: #f0883e;
  }
  
  .dark-code .token.property {
    color: #79c0ff;
  }
  
  .dark-code .token.punctuation {
    color: #c9d1d9;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Ottieni tutti i tab e i pannelli
    const tabs = document.querySelectorAll('.code-tab');
    const panels = document.querySelectorAll('.code-panel');
    
    // Funzione per mostrare il pannello selezionato
    const showPanel = (targetId) => {
      // Nascondi tutti i pannelli
      panels.forEach(panel => {
        panel.style.display = 'none';
      });
      
      // Mostra il pannello selezionato
      const targetPanel = document.getElementById(targetId);
      if (targetPanel) {
        targetPanel.style.display = 'block';
      }
    };
    
    // Imposta lo stato iniziale
    showPanel('without-morphr');
    
    // Aggiungi event listeners per ogni tab
    tabs.forEach(tab => {
      tab.addEventListener('click', () => {
        // Rimuovi la classe active da tutti i tab
        tabs.forEach(t => t.classList.remove('active'));
        
        // Aggiungi la classe active al tab cliccato
        tab.classList.add('active');
        
        // Mostra il pannello corrispondente
        const targetId = tab.getAttribute('data-target');
        showPanel(targetId);
      });
    });
    
  });
</script>